#!/bin/bash
### BEGIN INIT INFO
# Provides: vcadaemon
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up the VCA server daemon
# description: VCA a panel for server management
#              This script starts the daemon part 
### END INIT INFO

PATH="/sbin:/bin:/usr/sbin:/usr/bin"
DAEMON="/usr/share/vca/daemon/vcadaemon.py"
PID_FILE=/var/run/vcadaemon.pid
PROG="vcadaemon"

source /root/.bashrc

# load path
if [ -d /opt/rh/python33/root/usr/bin ]; then
	PATH=$PATH:/opt/rh/python33/root/usr/bin
fi

# lib
if [ -d /opt/rh/python33/root/usr/lib64 ]; then
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/rh/python33/root/usr/lib64
fi

start()
{
	if [ -f $PID_FILE ] ; then
		echo $"$PROG is already running"
	else
		echo $"Starting $PROG: "
		python3 $DAEMON
		return 0
	fi
}

stop()
{
	if [ -f $PID_FILE ] ; then
		echo $"Stopping $PROG: "
		start-stop-daemon --stop -p $PID_FILE
		rm -f $PID_FILE
		return 0
	else
		echo $"$PROG is not running"
	fi
}

restart() {
	stop
	start
}

status() {
	if [ -f $PID_FILE ] ; then
		echo $"$PROG is running"
	else
		echo $"$PROG is not running"
	fi
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	status)
		status
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		RETVAL=2
esac

exit $RETVAL
